<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:renderers="renderers.*"
		fontWeight="normal"
		creationComplete="view1_creationCompleteHandler(event)"		
		xmlns:pipelineservice="services.pipelineservice.*"
		title="Dlvd YTD">
	<fx:Script>
		<![CDATA[
			import com.adobe.serializers.utility.TypeUtility;
			import com.zeusbase.APIKey;
			
			import mx.collections.ArrayCollection;
			import mx.core.DPIClassification;
			import mx.core.FlexGlobals;
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.components.supportClasses.ViewReturnObject;
			import spark.events.IndexChangeEvent;
			import spark.events.ViewNavigatorEvent;
			import spark.transitions.FlipViewTransition;
			import spark.transitions.FlipViewTransitionMode;
			import spark.transitions.ViewTransitionDirection;
			
			import views.detail.SOHeader;
			import views.detail.ShipmentDetail;			
			public var flipTrans:FlipViewTransition = new FlipViewTransition();			
			import spark.events.IndexChangeEvent;
			import mx.core.DPIClassification;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import views.tabs.PipelineTabHome;
			
			
			public function refresh(): void {		
				busy.visible = true;				
				getListData();				
			}
			
			protected function view1_creationCompleteHandler(event:FlexEvent):void
			{
				if (Capabilities.version.indexOf("IOS") == 0)
				{
					var padding:Number = (10 * FlexGlobals.topLevelApplication.applicationDPI / DPIClassification.DPI_160);
					list.top = list.bottom = list.left = list.right = padding;
				}			
			}
			
			protected function list_creationCompleteHandler(event:FlexEvent):void
			{
				getListData();
			}
			
			protected function list_changeHandler(event:IndexChangeEvent):void
			{	
				/**
				var duration:int = 1;
				var direction:String = 'left';
				var mode:String = 'card';				
				flipTrans.duration = duration*2000; 
				flipTrans.mode = mode;
				flipTrans.direction = direction;
				navigator.pushView(views.detail.ShipmentDetail, list.selectedItem, null, flipTrans);	
				*/
				navigator.pushView(views.detail.ShipmentDetail, list.selectedItem);
			}			
			
			protected function asynclistview_Browse_collectionChangeHandler(event:CollectionEvent):void
			{
				busy.visible=false;						
			}
			
			public function getListData():void{								
				DlvdYTDResults.token = pipelineService.getDlvdYTD('ShipmentView.PIPE_DELIVERED_YTD', '50', APIKey.getInstance().keyCode);
			}
			
			private function resultHandler(event:ResultEvent):void
			{
				trace("DLVD YTD : HTTP Service RESPONSE executed successfully");
				busy.visible=false;				
				
				var totalResults:int = DlvdYTDResults.lastResult.total;
				trace("Total Results = " + totalResults);
				
				// Add message when result set is empty
				if(totalResults == 0){
					listMessageNoResults.text = "No Results Found.";
					listMessageNoResults.visible=true;	
				}
			}
			
			private function faultHandler(event:FaultEvent):void
			{
				trace(event.fault.faultDetail, "Error");				
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<s:CallResponder id="DlvdYTDResults"
						 result="resultHandler(event)" 
						 fault="faultHandler(event)"/>
		<pipelineservice:PipelineService id="pipelineService"/>
	</fx:Declarations>

	
	<!-- STYLES
	**************************************************************************************************
	-->	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		
		.viewResultsResponseList { 
			fontSize: 12;
			fontFamily: "Helvetica";
			textDecoration: none;
			color: #2468a2;
		}
		
		@media (os-platform: "IOS")
		{
			.listFormItemRenderer
			{
				borderStyle: rounded;
				cornerRadius: 10;
			}
			
			.listForm #titleDisplay
			{
				backgroundAlpha: 0;
				color: #4C566C;
				fontFamily: "Helvetica";
				fontSize: 18;
			}
		}
		
		@media (os-platform: "IOS") and (application-dpi: 320)
		{
			.listFormItemRenderer
			{
				cornerRadius: 20;
			}
			
			.listForm #titleDisplay
			{
				fontSize: 36;
			}
		}
		
	</fx:Style>
	

	<!--
	***  STATES
	-->	
	<s:states>
		<s:State name="normal" />
		<s:State name="disabled" />
	</s:states>
	
	<!--
	***  Navigation Bar
	-->
	<s:navigationContent>
		<s:Button icon="@Embed('assets/glyphs/icon-back@2x.png')" click="navigator.pushView(views.tabs.PipelineTabHome)"/>				
	</s:navigationContent>		
	
	<s:actionContent>
		<s:Button id="refreshBtn" click="Object(navigator.activeView).refresh()"
				  icon="@Embed('assets/glyphs/icon-refresh@2x.png')">
		</s:Button>
	</s:actionContent>
	
	
	
	<!-- Background -->
	<s:Rect left="0" right="0" height="100%" width="100%">
		<s:fill>
			<s:BitmapFill source="@Embed('assets/backgrounds/chrome.png')" fillMode="scale" />
		</s:fill>
	</s:Rect>
	
	
	<!--
	***  No Results Message
	-->	
	<s:Label id="listMessageNoResults" visible="false" width="319" height="33" color="#84130D"
			 fontFamily="Helvetica" fontSize="13" fontStyle="italic" fontWeight="bold"
			 text="No Results Found." textAlign="center" verticalAlign="middle"/>
	
	
	
	
	<!--
	***  List
	-->
	<s:Scroller width="100%" height="100%">
		<s:Group width="100%" height="100%">
	


			<!-- Custom List with optional title skin part -->
			<s:ListForm id="list" left="0" right="0" top="0" bottom="0" width="100%" height="100%"
						change="list_changeHandler(event)"
						creationComplete="list_creationCompleteHandler(event)" 						
						styleName="listForm"
						title="Total Records: {DlvdYTDResults.lastResult.total} ">
				
				<s:AsyncListView collectionChange="asynclistview_Browse_collectionChangeHandler(event)"
								 list="{TypeUtility.convertToCollection(DlvdYTDResults.lastResult.data)}"/>
				
				<s:itemRenderer>
					<fx:Component>
						<renderers:StyledIconItemRenderer
							styleName="listFormItemRenderer"
							messageStyleName="viewResultsResponseList"
							label="File#: {data.FileNumber}"
							messageFunction="getDetails"					
							verticalAlign="middle"
							decorator="@Embed(source='assets/buttonsweb/msg_info.png')">
							<fx:Script>
								<![CDATA[
									import assets.LoadingIcon;
									private function getDetails(item: Object): String{			
										return "MBL: " + data.MasterNumber + " HBL: " + data.HouseNumber;																	
									}
								]]>
							</fx:Script>
						</renderers:StyledIconItemRenderer>
						
					</fx:Component>
				</s:itemRenderer>
				
				
			</s:ListForm>			
			
			
			
		</s:Group>
	</s:Scroller>
	
	<!--
	***  Busy Indicator
	-->
	<s:BusyIndicator id="busy" visible="true" width="86" height="84" horizontalCenter="0"
					 rotationInterval="50" symbolColor="#004080" verticalCenter="-65"/>		
</s:View>
