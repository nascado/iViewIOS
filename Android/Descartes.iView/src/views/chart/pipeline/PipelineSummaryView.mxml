<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		title="Pipeline Summary">
	
	<fx:Script>
		<![CDATA[
			import mx.charts.HitData;
			import mx.charts.events.ChartItemEvent;
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;

			[Bindable] protected var results:ArrayCollection = new ArrayCollection( [
				{ region: "PO", total: 2400,                            
					results: [	{quarter: "Total", Alpha: 100, Beta: 200, Gamma: 300}, 
						{quarter: "Late", Alpha: 240, Beta: 120, Gamma: 400},
						{quarter: "OnTime", Alpha: 80, Beta: 220, Gamma: 350},
						{quarter: "Dlvd", Alpha: 280, Beta: 160, Gamma: 190} ] },
				{ region: "SO", total: 1000,                            
					results: [	{quarter: "Late", Alpha: 120, Beta: 210, Gamma: 80}, 
						{quarter: "OnTime", Alpha: 140, Beta: 180, Gamma: 70},
						{quarter: "Not Arrived", Alpha: 70, Beta: 90, Gamma: 220},
						{quarter: "Dlvd", Alpha: 180, Beta: 100, Gamma: 80} ] },
				{ region: "Progress", total: 1200,                            
					results: [	{quarter: "Late", Alpha: 70, Beta: 110, Gamma: 180}, 
						{quarter: "OnTime", Alpha: 40, Beta: 80, Gamma: 120},
						{quarter: "Not Arrived", Alpha: 90, Beta: 90, Gamma: 220},
						{quarter: "Dlvd", Alpha: 120, Beta: 150, Gamma: 220} ] },
				{ region: "Transit", total: 800,                            
					results: [	{quarter: "Late", Alpha: 20, Beta: 60, Gamma: 50}, 
						{quarter: "OnTime", Alpha: 30, Beta: 70, Gamma: 200},
						{quarter: "Not Arrived", Alpha: 50, Beta: 50, Gamma: 130},
						{quarter: "Dlvd", Alpha: 70, Beta: 40, Gamma: 100} ] },
				{ region: "EntDlvd", total: 800,                            
					results: [	{quarter: "Late", Alpha: 20, Beta: 60, Gamma: 50}, 
						{quarter: "OnTime", Alpha: 30, Beta: 70, Gamma: 200},
						{quarter: "Not Arrived", Alpha: 50, Beta: 50, Gamma: 130},
						{quarter: "Dlvd", Alpha: 70, Beta: 40, Gamma: 100} ] },
				{ region: "Entry", total: 800,                            
					results: [	{quarter: "Late", Alpha: 20, Beta: 60, Gamma: 50}, 
						{quarter: "OnTime", Alpha: 30, Beta: 70, Gamma: 200},
						{quarter: "Not Arrived", Alpha: 50, Beta: 50, Gamma: 130},
						{quarter: "Dlvd", Alpha: 70, Beta: 40, Gamma: 100} ] },				
				{ region: "Arrived", total: 2000,                            
					results: [	{quarter: "Late", Alpha: 70, Beta: 100, Gamma: 280}, 
						{quarter: "OnTime", Alpha: 230, Beta: 270, Gamma: 110},
						{quarter: "Not Arrived", Alpha: 190, Beta: 150, Gamma: 140},
						{quarter: "Dlvd", Alpha: 300, Beta: 220, Gamma: 90} ] }
			]);
			
			
			protected function dataTipPie(hitData:HitData):String
			{
				var region:String = hitData.item.region;
				var total:Number = hitData.item.total;
				return "<p align='center'><b>" + region + "</b><br>" + nf.format(total)+"</p>";
			}
			
			protected function dataTipColumn(hitData:HitData):String
			{
				var region:String = hitData.item.region;
				var total:Number = hitData.item.total;
				return "<p align='center'><b>" + Object(hitData.element).yField + "</b><br>" + Object(hitData.chartItem).xValue + "<br>" + nf.format(Object(hitData.chartItem).yValue)+"</p>";
			}
			
			protected function getSliceLabel(item:Object, arg2:String, arg3:Number, arg4:Number):String
			{
				return item==null?"":item.region;
			}
			
			protected function pcRegion_itemClickHandler(event:ChartItemEvent):void
			{
				var arr:Array = [];
				arr[event.hitData.chartItem.index] = 0.2;
				pieSeries.perWedgeExplodeRadius = arr;
				breakdown.dataProvider = event.hitData.chartItem.item.results;
				title2.text = "Buckets Breakdown - " + event.hitData.chartItem.item.region 
			}
			
			protected function stackGroup_changeHandler(event:Event):void
			{
				breakdown.type=event.target.selectedValue;
				switch(event.target.selectedValue)
				{
					case "clustered":
					{
						vAxis.maximum = 400;		
						break;
					}
					case "stacked":
					{
						vAxis.maximum = 800;		
						break;
					}
					case "100%":
					{
						vAxis.maximum = 100;		
						break;
					}
				}
				
			}
			
			public function refresh(): void {		
				trace('Refresh Report Called - Pipeline Summary');
			}
						
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:NumberFormatter id="nf"/>
		<mx:SeriesInterpolate id="interpolate"/>
		<s:RadioButtonGroup id="labelPositionGroup"/>
		<s:RadioButtonGroup id="stackGroup" change="stackGroup_changeHandler(event)"/>
		

		
		<!-- Define custom colors for use in Bar Chart fills. -->
		<mx:SolidColor id="bar1" color="#004080" alpha=".1"/>
		<mx:SolidColor id="bar2" color="#004080" alpha=".3"/>
		<mx:SolidColor id="bar3" color="#004080" alpha=".6"/>
		<mx:SolidColor id="bar4" color="#004080" alpha=".8"/>
		<mx:SolidColor id="bar5" color="#004080" alpha="1"/>
		<mx:SolidColor id="bar6" color="#004080" alpha=".9"/>
		<mx:SolidColor id="bar7" color="#004080" alpha=".7"/>
	</fx:Declarations>
	

	
	<s:states>
		<s:State name="portrait"/>
		<s:State name="landscape"/>
	</s:states>

	<s:navigationContent>
		<s:Button includeIn="portrait" icon="@Embed('assets/glyphs/icon-back@2x.png')" click="navigator.popView()"/>				
	</s:navigationContent>
	
	<s:actionContent>
		<s:Button  includeIn="portrait" id="refreshBtn" click="Object(navigator.activeView).refresh()"
				  icon="@Embed('assets/glyphs/icon-refresh@2x.png')">
		</s:Button>
	</s:actionContent>
	
	
	<!--
	  ********************************************************************************************
	  PIE CHART
	  ********************************************************************************************
	-->
	<s:Group
		top="20" left="20" right="20" bottom="{height/2 + 10}"
		bottom.landscape="20" right.landscape="{width/2 + 10}">
		
		
		<mx:PieChart id="pcRegion" dataProvider="{results}" fontSize="16"
					 top="0" left="0" right="0" bottom="30"
					 showDataTips="true" dataTipFunction="dataTipPie"
					 itemClick="pcRegion_itemClickHandler(event)">
			
			<mx:series>
				<mx:PieSeries id="pieSeries" field="total" nameField="region" 
							  labelPosition="callout"
							  labelFunction="getSliceLabel"
							  fills="{[bar1, bar2, bar3, bar4, bar5, bar6, bar7]}"/>
			</mx:series>
		</mx:PieChart>
		

		
	</s:Group>
	

	<!--
	********************************************************************************************
	BAR CHART
	********************************************************************************************
	-->	
	<s:Group
		top="{height/2 + 10}" bottom="20" left="20" right="20"
		top.landscape="20" left.landscape="{width/2 + 10}">
		<s:Label id="title2" text="Bucket Breakdown" styleName="title"/>
		<mx:ColumnChart id="breakdown" fontSize="16"
						bottom="66" left="0" right="0" top="30"
						width.landscape="{(width-60)/2}" height.landscape="{undefined}" left.landscape="{undefined}"
						showDataTips="true" dataTipFunction="dataTipColumn">
			
			<mx:horizontalAxis>
				<mx:CategoryAxis categoryField="quarter"/>
			</mx:horizontalAxis>
			
			<mx:verticalAxis>
				<mx:LinearAxis id="vAxis" minimum="0" maximum="400"/>
			</mx:verticalAxis>
			
			<mx:series>
				<mx:ColumnSeries xField="quarter" yField="Alpha" displayName="PO" showDataEffect="{interpolate}" fill="{bar1}"/>
				<mx:ColumnSeries xField="quarter" yField="Beta" displayName="SO" showDataEffect="{interpolate}" fill="{bar2}"/>
				<mx:ColumnSeries xField="quarter" yField="Gamma" displayName="Containers" showDataEffect="{interpolate}" fill="{bar3}"/>
			</mx:series>
			
		</mx:ColumnChart>

		<mx:Legend  horizontalCenter="16" bottom="36"
					dataProvider="{breakdown}"
					direction="horizontal"/>



	</s:Group>
	
</s:View>